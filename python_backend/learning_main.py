# -*- coding: utf-8 -*-
"""learning_main.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YE_skK_cx1T8HdT6yU5fJDUdzcvvneh5
"""
import asyncio
import WebSocketInterface as ws
from roadmap import roadmap 
from yt_summary import yt_text,get_youtube_links
from scrapper import scrape_text,get_top_urls
import json
from example_data import example_course_data

async def main():
    server_task=asyncio.create_task(ws.start_server())
    while ws.user_json is None or ws.search_json is None:
        await asyncio.sleep(1)
    user=ws.user_json
    search=ws.search_json
    print(user)
    print(search)

    #json_lesson=roadmap(user_json=user,search_json=search)

    
    '''course_data = {
    "name": json_lesson['Course_name'],
    "topics": []
    }

    for topic in json_lesson["topics"]:
        topic_data = {
          "name": topic['name'],
          "subtopics": []
        }

        for subtopic in topic["subtopics"]:
            content = []

            # Get web content
            top_urls = get_top_urls(subtopic)
            for url in top_urls:
                text = scrape_text(url)
                if text:
                    content.append(text)

        # Get YouTube content
            youtube_links = get_youtube_links(subtopic)
            for link in youtube_links:
                yt_summary = yt_text(link)
                if yt_summary:
                    content.append(yt_summary)

        subtopic_data = {
            "name": subtopic,
            "content": content
        }

        topic_data["subtopics"].append(subtopic_data)

    course_data["topics"].append(topic_data)'''



    for client in ws.connected_clients:
        await client.send(json.dumps(example_course_data))
    

if __name__=="__main__":
    asyncio.run(main())
    
    








